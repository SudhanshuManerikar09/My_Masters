%Code for Problem 2a

%Entering the values for G(s) and poles
num = [1,0,0,-29,100] %numerator coefficients of G(s)
den = [1,0,-36,-10,9,-360,-324] %denominator coefficients of G(s)

%Defining function G(s)

G = tf(num,den)
disp(G)

b = tf(num,1) % getting b(s) numerator of G(s)
a = tf(den,1) % getting a(s) denominator of G(S)

disp(a)
disp(b)

%poles = [-1,-1,-3,-3,-6,-6]
%Defining transfer function F(s)
pole = tf ([1,97,154,576,1089,972,324],1) 

            
% Calling the RR_diophantine function to compute the controller parameters
[x, y, r, t] = RR_diophantine(num, den, pole);


%Displaying the values of x,y,r,t for D(s)
disp(['x: ' num2str(x)]);
disp(['y: ' num2str(y)]);
disp(['r: ' num2str(r)]);
disp(['t: ' num2str(t)]);

%Hence displaying D(s) as y(s)/x(s):
D = [x, '/', y]
disp(D) %displaying D(s)

%fdefining the function [x,y,r,t] = RR_diophantine()
function[x,y,r,t] = RR_diophantine(a,b,pole)

end
